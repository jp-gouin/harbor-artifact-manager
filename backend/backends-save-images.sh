#!/bin/bash
      list=@repoList
      charts=@chartList
      images="backends-images.tar"
      user="@user"
      password="@password" 
      reg=""
      harbor="harbor.g3s-service.itcoc.tech"
      filter=""
      #POSITIONAL=()
      while [[ $# -gt 0 ]]; do
          key="$1"
          case $key in
              -i|--images)
              images="$2"
              shift # past argument
              shift # past value
              ;;
              -l|--image-list)
              list="$2"
              shift # past argument
              shift # past value
              ;;
              -h|--help)
              help="true"
              shift
              ;;
              -u|--user)
              user="$2"
              shift # past argument
              shift # past value
              ;;
              -p|--password)
              password="$2"
              shift # past argument
              shift # past value
              ;;
      --load)
              load="true"
              shift # past argument
              shift # past value
              ;;
      -r|--reg)
              reg="$2"
              shift # past argument
              shift # past value
              ;;
      -a|--harborurl)
              harbor="$2"
              shift # past argument
              shift # past value
              ;;
      -f|--filter)
              filter="$2"
              shift # past argument
              shift # past value
              ;;
          esac
      done

      usage () {
          echo "USAGE: $0 [--images rancher-images.tar.gz]"
          echo "  [-l|--images-list path] text file with list of images. 1 per line."
          echo "  [-l|--images path] tar.gz generated by docker save."
          echo "  [-u|--user username] user to logon Harbor"
          echo "  [-p|--password password] password for harbor user" 
          echo "  [-a|--harbor harbor uri] Url to harbor for docker login" 
          echo "  [--load load mode] load backup in harbor default is save" 
          echo "  [-r|--reg registry] name of registry in case of load" 
          echo "  [-f|--filter artifact] **load only** filter the artifact to upload" 
          echo "  [-h|--help] Usage message"
      }

      if [[ $help ]]; then
          usage
          exit 0
      fi

      if [[ $load ]]; then
        echo "loading docker images"
        for f in docker-images/$filter*.tar.gz; do
            cat $f | docker load
        done
        docker login -u ${user} -p${password} ${harbor}
        for i in ${list[@]}; do
          echo "rebase image ${i} and push it to docker registry"
          basename=$(echo ${i}| cut -d/ -f2-)
          docker tag ${i} ${harbor}/${basename}
          docker push ${harbor}/${basename} 
        done

        echo "push charts to chartrepo"
        for i in "${charts[@]}"; do
          project=$(echo ${i} | awk -F 'chartrepo' '{print $2}' | cut -d / -f2)
          echo "push charts $(echo ${i}| rev | cut -d/ -f1 | rev) to chartrepo : https://${harbor}/api/chartrepo/${project}/charts "
          curl -k -s -u "${user}:${password}" -X POST "https://${harbor}/api/chartrepo/${project}/charts" \
            -H "Content-Type: multipart/form-data" \
            -F "chart=@$(echo charts/${i}| rev | cut -d/ -f1 | rev);type=application/x-compressed-tar"
        done
        echo "Done"
      else
        mkdir -p deliveries/docker-images
        mkdir -p deliveries/charts
        cp *.sh deliveries
        cd deliveries
        echo "Start saving docker images"
        docker login -u ${user} -p${password} ${harbor}
        for i in "${list[@]}"; do
          docker pull ${i}
          docker save ${i} | gzip -c > docker-images/${i##*/}.tar.gz
          docker rmi ${i}
        done
        echo "start saving charts"
        for i in "${charts[@]}"; do
          curl --user ${user}:${password} ${i} --output charts/$(echo ${i}| rev | cut -d/ -f1 | rev)
        done
        cd ..
        tar czf deliveries.tar.gz deliveries
      fi